#include<iostream>
#include<conio.h>
#include<windows.h>
#include<time.h>

#define LEBAR_LAYAR 90
#define TINGGI_LAYAR 27
#define WIN_WIDTH 70
#define MENU_WIDTH 20

using namespace std;

HANDLE console = GetStdHandle(STD_OUTPUT_HANDLE);
COORD CursorPosition;

int kelinciY[5];
int kelinciX[5];
int kelinciFlag[3];
int missCount = 5;
int missLimit = 3;  
int TargetScore = 30;

char MyKeranjang[2][14] = {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',
                           '|', '', '', '', '', '', '', '', '', '', '', '', '', '|'
};

int keranjangPos = WIN_WIDTH / 2;
int score = 0;

void gotoxy(int x, int y) {
    CursorPosition.X = x;
    CursorPosition.Y = y;
    SetConsoleCursorPosition(console, CursorPosition);
}

void setcursor(bool visible, DWORD size) {
    if (size == 0)
        size = 20;

    CONSOLE_CURSOR_INFO lpCursor;
    lpCursor.bVisible = visible;
    lpCursor.dwSize = size;
    SetConsoleCursorInfo(console, &lpCursor);
}

void Border() {
    for (int i = 0; i < TINGGI_LAYAR; i++) {
        for (int y = 0; y < 10; y++) {
            gotoxy(0 + y, i);
            cout << "±";
            gotoxy(LEBAR_LAYAR - y, i);
            cout << "±";
        }
    }
    for (int i = 0; i < TINGGI_LAYAR; i++) {
        gotoxy(LEBAR_LAYAR, i);
        cout << "±";
    }
}

void arahKelinci(int ind) {
    kelinciX[ind] = 17 + rand() % (35);
}

void gambarKelinci(int ind) {
    if (kelinciFlag[ind] == true) {
        gotoxy(kelinciX[ind], kelinciY[ind]);	  cout << "  ^ _ ^ ";
        gotoxy(kelinciX[ind], kelinciY[ind] + 1); cout << "(  o.o  )";
        gotoxy(kelinciX[ind], kelinciY[ind] + 2); cout << " >  ^  < ";
        gotoxy(kelinciX[ind], kelinciY[ind] + 3); cout << " () () ";
    } else {
        gotoxy(kelinciX[ind], 23);				  cout << "              ";
        gotoxy(kelinciX[ind], 24);				  cout << "              ";
        gotoxy(kelinciX[ind], kelinciY[ind] + 2); cout << "              ";
        gotoxy(kelinciX[ind], kelinciY[ind] + 3); cout << "              ";
    }
}

void hapusKelinci(int ind) {
    if (kelinciFlag[ind] == true) {
        gotoxy(kelinciX[ind], kelinciY[ind]); 	 cout << "             ";
        gotoxy(kelinciX[ind], kelinciY[ind] + 1);cout << "             ";
        gotoxy(kelinciX[ind], kelinciY[ind] + 2);cout << "             ";
        gotoxy(kelinciX[ind], kelinciY[ind] + 3);cout << "             ";
    }
}

void resetKelinci(int ind) {
    hapusKelinci(ind);
    kelinciY[ind] = 1;
    arahKelinci(ind);
}

void gambarKeranjang() {
    for (int i = 0; i < 2; i++) {
        for (int j = 0; j < 14; j++) {
            gotoxy(j + keranjangPos, i + 23);
            cout << MyKeranjang[i][j];
        }
    }
}

void hapusKeranjang() {
    for (int i = 0; i < 2; i++) {
        for (int j = 0; j < 14; j++) {
            gotoxy(j + keranjangPos, i + 23); cout << " ";
        }
    }
}


void username() {
    system("cls");
    string ID;
    const int MaxUsernameLength = 10;
    do {
        gotoxy(15, 5);	cout << " SILAHKAN MASUKKAN USERNAME ANDA ! ";
        gotoxy(15, 9);	cout << "...................................";
        gotoxy(15, 11);	cout << "...................................";
        gotoxy(15, 10);	cout << "username : ";
        getline(cin, ID);
        system("cls");
        if (ID.length() > MaxUsernameLength) {
            cout << "\n Username anda terlalu panjang. \n Maksimum Username adalah " << MaxUsernameLength << " Karakter. "<< endl;
            getch();
            system("cls");
        }
    } while (ID.length() > MaxUsernameLength);
    system("cls");
    gotoxy(15, 5);	cout << "                                                      ";
    gotoxy(15, 9);	cout << "                                                      ";
    gotoxy(15, 11);	cout << "                                                     ";
    gotoxy(15, 10);	cout << "                                                     ";
    gotoxy(LEBAR_LAYAR + 2, 18); cout << "==========================";
    gotoxy(LEBAR_LAYAR + 2, 19); cout << " ID     : " << ID;
    gotoxy(LEBAR_LAYAR + 2, 20); cout << "==========================";
}
int menangkap() {
    for (int ind = 0; ind < 2; ind++) {
        if (kelinciY[ind] + 4 >= 23 && kelinciY[ind] <= 27) {
            if (kelinciX[ind] >= keranjangPos && kelinciX[ind] <= keranjangPos + 9) {
                resetKelinci(ind);
                return 1;
            } else {
                return 2;
            }
        }
    }
    return 0;
}
void gameover() {
    int posY = 10;
    system("color DE");
    for (int posX = 0; posX < 50; ++posX) {
        gotoxy(posX, posY);	   cout << "  GGG      A     M       M   EEEEE      OOO  V   V EEEEE RRRR \n ";
        gotoxy(posX, posY + 1);cout << " G        A A   MMM     MMM  E         O   O V   V E     R   R\n";
        gotoxy(posX, posY + 2);cout << " G  GGG  AAAAA  M   M  M  M  EEEEE     O   O V   V EEEEE RRRR \n";
        gotoxy(posX, posY + 3);cout << " G   GG  A   A  M    M    M  E         O   O V   V E     R  RR \n";
        gotoxy(posX, posY + 4);cout << "  GGG    A   A  M         M  EEEEE      OOO    V   EEEEE R   RR\n";
        Sleep(50);
        system("cls");

        gotoxy(30, 18);cout << "\t\t Score Anda Adalah\t: " << score;
        gotoxy(15, 5);cout << "\t\t\t\t Press any key to go back to menu.";
    }
}
void scoregame() {
    gotoxy(LEBAR_LAYAR + 7, 8);
    cout << "Awal Score anda : " << score;
}
void YouWin() {
    int posY = 0;
    int screenWidth = 80;  
    while (posY < 10) {
        system("cls");

        gotoxy((screenWidth - 65) / 2, posY); 	  cout << "  yyy     yyy   oooooooooo   uuuu        uuuu      wwww                   wwww  iiiiii   nnnnn      nnnnn";
        gotoxy((screenWidth - 65) / 2, posY + 1); cout << "  yyy     yyy  oooo    oooo  u  u        u  u      w  w                   w  w  ii  ii   n   n      n   n";
        gotoxy((screenWidth - 65) / 2, posY + 2); cout << "  yyyy   yyyy  ooo      ooo  u  u        u  u      w  w                   w  w  ii  ii   n    n     n   n";
        gotoxy((screenWidth - 65) / 2, posY + 3); cout << "   yyyyyyyy    ooo      ooo  u  u        u  u      w  w                   w  w  ii  ii   n     n    n   n";
        gotoxy((screenWidth - 65) / 2, posY + 4); cout << "    yyyyyy     ooo      ooo  u  u        u  u      w  w      wwwwwww      w  w  ii  ii   n      n   n   n";
        gotoxy((screenWidth - 65) / 2, posY + 5); cout << "     yyyyy     ooo      ooo  u  u        u  u      w  w     w  ww  w      w  w  ii  ii   n   n   n  n   n";
        gotoxy((screenWidth - 65) / 2, posY + 6); cout << "     yyyy      ooo      ooo  u  u        u  u      w  w    w  w  w  w     w  w  ii  ii   n   n n  nn    n";
        gotoxy((screenWidth - 65) / 2, posY + 7); cout << "     yyyy      ooo      ooo  u  u        u  u      w  w   w  w    w  w    w  w  ii  ii   n   n  n       n";
        gotoxy((screenWidth - 65) / 2, posY + 8); cout << "     yyyy      oooo    oooo  u   uuuuuuuuu  u      w  w  w  w      w   w  w  w  ii  ii   n   n    nnn   n";
        gotoxy((screenWidth - 65) / 2, posY + 9); cout << "     yyyy       oooooooooo   uuuuuuuuuuuuuuuu      wwwwwwwwww       wwwwwwwwww  iiiiii   nnnnn      nnnnn";
        Sleep(100);
        posY++;
    }
}
void loading() {
    system("cls");
    system("color 90");
    for (int i = 1; i <= 3; i++) {

        gotoxy(35, 10);	cout << "LOADING [>        ]";
        Sleep(100);
        gotoxy(35, 10);	cout << "LOADING [>>       ]";
        Sleep(100);
        gotoxy(35, 10);	cout << "LOADING [>>>      ]";
        Sleep(100);
        gotoxy(35, 10);	cout << "LOADING [>>>>     ]";
        Sleep(100);
        gotoxy(35, 10);	cout << "LOADING [>>>>>    ]";
        Sleep(100);
        gotoxy(35, 10);	cout << "LOADING [>>>>>>   ]";
        Sleep(100);
        gotoxy(35, 10);	cout << "LOADING [>>>>>>>  ]";
        Sleep(100);
        gotoxy(35, 10);	cout << "LOADING [>>>>>>>> ]";
        Sleep(100);
        gotoxy(35, 10);	cout << "LOADING [>>>>>>>>>]";
        Sleep(100);
    }
    system("cls");
    gotoxy(30, 25);	cout << "SELAMAT BERMAIN !!! ";
}
void instructions() {
    system("color e5");
    system("cls");
    cout << " Instructions " << endl;
    cout << "\n\t -----------------------------------";
    cout << "\n\t catch a rabbit that glides quickly ";
    cout << "\n\n\t Press 'n' to move left";
    cout << "\n\t Press 'x' to move right";
    cout << "\n\t Press 'escape' to exit";
    cout << "\n\n\t Press any key to go back to menu";
    getch();
    system("cls");
}
